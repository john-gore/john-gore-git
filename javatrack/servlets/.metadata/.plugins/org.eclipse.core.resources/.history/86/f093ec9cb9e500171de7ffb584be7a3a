package com.codingdojo.javabelt2.services;

import java.security.Principal;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.codingdojo.javabelt2.repositories.PostRepository;
import com.codingdojo.javabelt2.repositories.UserRepository;
import com.kenny.springevents.models.User;
import com.kenny.springevents.utilities.StateList;

@Service
public class UserService {
	private UserRepository userRepository;
    private PostRepository postRepository;
    private BCryptPasswordEncoder bCryptPasswordEncoder;
    
    public UserService(UserRepository userRepository, PostRepository postRepository, BCryptPasswordEncoder bCryptPasswordEncoder)     {
        this.userRepository = userRepository;
        this.postRepository = postRepository;
        this.bCryptPasswordEncoder = bCryptPasswordEncoder;
    }

    @PostMapping("/registration")
    public String registration(@Valid @ModelAttribute("user") User user, BindingResult result,
    		Model model, HttpSession session, RedirectAttributes redirectAttributes, HttpServletRequest request) throws ServletException {
    	userValidator.validate(user, result);
    	if (result.hasErrors()) {
            model.addAttribute("stateMap", StateList.STATE_MAP);
            return "loginreg.jsp";
        }
	    	String oldPass = user.getPassword();
	    	userService.saveWithUserRole(user);
        request.login(user.getEmail(), oldPass);
        System.out.println(request.getUserPrincipal().getName());
        return "redirect:/events";
    }

    @RequestMapping("/login")
    public String login(@RequestParam(value="error", required=false) String error,
    		@RequestParam(value="logout", required=false) String logout, 
    		@ModelAttribute("regMessage") String regMessage,
    		Model model, Principal principal, @ModelAttribute("user") User user) {
	    	if (principal != null) {
	    		return "redirect:/events";
	    	}
        if(error != null) {
            model.addAttribute("errorMessage", "Invalid Credentials, Please try again.");
        }
        if(logout != null) {
            model.addAttribute("logoutMessage", "Logout Successful!");
        }
        
        return "loginreg.jsp";
    }
}
