package com.codingdojo.javabelt2.controllers;

import java.security.Principal;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.codingdojo.javabelt2.models.Post;
import com.codingdojo.javabelt2.models.User;
import com.codingdojo.javabelt2.services.UserService;
import com.codingdojo.javabelt2.validators.UserValidator;
import com.kenny.springevents.models.GetTogether;
import com.kenny.springevents.utilities.StateList;





@Controller
public class MainController {
	private UserService userService;
    private UserValidator userValidator;
    
    
    public MainController(UserValidator userValidator,
    		UserService userService)     {
        this.userService = userService;
        this.userValidator = userValidator;
    }
    
    @PostMapping("/registration")
    public String registration(@Valid @ModelAttribute("user") User user, BindingResult result,
    		Model model, HttpSession session, RedirectAttributes redirectAttributes, HttpServletRequest request) throws ServletException {
    	userValidator.validate(user, result);
    	if (result.hasErrors()) {
            return "loginreg.jsp";
        }
    	String oldPass = user.getPassword();
    		userService.saveUser(user);
        request.login(user.getEmail(), oldPass);
        System.out.println(request.getUserPrincipal().getName());
        return "redirect:/dashboard";
    }

    @RequestMapping("/login")
    public String login(@RequestParam(value="error", required=false) String error,
    		@RequestParam(value="logout", required=false) String logout, 
    		@ModelAttribute("regMessage") String regMessage,
    		Model model, Principal principal, @ModelAttribute("user") User user) {
	    	if (principal != null) {
	    		return "redirect:/dashboard";
	    	}
        if(error != null) {
            model.addAttribute("errorMessage", "Invalid Credentials, Please try again.");
        }
        if(logout != null) {
            model.addAttribute("logoutMessage", "Logout Successful!");
        }
        return "loginreg.jsp";
    }
    
    @RequestMapping("/events")
    public String home(Principal principal, Model model, @ModelAttribute("post") Post post) {
        String email = principal.getName();
        User loggedUser = userService.findByEmail(email);
        model.addAttribute("currentUser", loggedUser);
//        model.addAttribute("inStateGetTogethers", getTogetherService.findByStateLike(loggedUser.getState()));
//        model.addAttribute("outStateGetTogethers", getTogetherService.findByStateNotLike(loggedUser.getState()));
        return "dashboard.jsp";
    }
}
